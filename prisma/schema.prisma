// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories      Category[]
  storeStocks     StoreStock[]
  warehouseStocks WarehouseStock[]
  prices          Price[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Store {
  id       Int    @id @default(autoincrement())
  name     String @unique
  location String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  storeStocks StoreStock[]
}


// м.б. нужна связь с магазином? Есть ли смыл в цене вне магазина?
model Price {
  id       Int    @id @default(autoincrement())
  amount   Decimal @db.Money
  currency String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@unique([productId, currency])
}

model StoreStock {
  id       Int @id @default(autoincrement())
  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store @relation(fields: [storeId], references: [id])
  storeId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@unique([productId, storeId])
}

model WarehouseStock {
  id       Int @id @default(autoincrement())
  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}
